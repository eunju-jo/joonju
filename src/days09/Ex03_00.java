package days09;

import java.util.Scanner;

/**
 * @author 조은주
 * @date Mar 18, 2021 - 2:12:06 PM
 * @subject 9일: 4자리의 년도를 입력받아서 "윤년" 또는 "평년"을 출력하는 코딩
 * @content
 *
 */
public class Ex03_00 {
	public static void main(String[] args) {
		//4자리의 년도를 입력받아서 "윤년" 또는 "평년"을 출력하는 코딩
		//틀은 정수 하나 입력받아 홀수, 짝수출력하는 거랑 똑같
		int year; //2010 -> 년도는 덧셈뺄셈할일 많아서 int로 선언하는 것이 좋음

//		 윤년 ## "치윤법"에 따라 400년에 윤년을 97번 두고 있음.	 =>'그레고리오력'(현행의 태양력)	
//				 	[1] 4로 나눠 떨어지는 해는 '윤년'                   _ 400년 중 100번
//				 	[2] '그 중' 100으로 나눠 떨어지는 해는 '평년' 위에서   _ 100th년, 200th년, 300th년, 400th년 뺌 ->96
//				 	[3] 다만 400으로 나눠떨어지는 해는 다시 '윤년'         _ 위에 400th년은 윤년으로 추가 -> 총 97번
//				 	==> 이로써 1년의 평균길이를 365.2425일로 정하여 역에 썼으므로 실제의 1년보다 0.0003일이 길다.
		
		Scanner scanner = new Scanner(System.in);
		System.out.println("> 년도를 4자리로 입력하세요.");
		year = scanner.nextInt();
	
		//[1] year % 4 == 0 
		//[2] year % 100 != 0
		//[3] year % 400 == 0
		
		if (year % 4 == 0 && year % 100 != 0 || year % 400 == 0 ) {
			System.out.println("윤년 leap year");
		} else {
			System.out.println("평년 common year");
		}
		

	}//main

	//년도를 입력받아 윤년/평년 true, false 값으로 반환하는 메서드 만들고 자주 쓸것임
	
	
}//class


/*
 1. 평년: 태양력에서 2월은 28일까지 있는 것. 
 	 	 그러나 29일로 둔 해가 [윤년]
 2. 이것은 1년의 길이가 365일로 실제보다 0.2422일 짧은 것이므로,   
 	점차 계절과 차이가 발생하게 되는 것을 해결하고자 한 것이다. 	
 3. 1년 = 태양이 한바퀴 돌아서 오는 날. [[정확한 1년 == 365.2422일 ]] 
 	매번 0.2422일이 남게 됨. 이게 쌓이면 해가 갈수록 원래 위치보다 덜왔을 때 그날을 맞이함 (나중엔 겨울인데 실제론 가을)
 4. 그래서 이전의 율리우스력에서는 4년마다 2월을 29일로 함. 1년 = 365.25로 계산 	
 	1년 365.25 ---- 4년되면 366일이 되버림    
 	--> 4년마다 2월 29일을 만들면 됨(그러고도 오차가 남아서 2번 치윤법이 생긴 것)	
	얼마전까지 사용하던 것이지만 실제보다 1년에 0.0078일 더 길다.	
 
 ## "치윤법"에 따라 400년에 윤년을 97번 두고 있음.	 =>'그레고리오력'(현행의 태양력)	
 	[1] 4로 나눠 떨어지는 해는 '윤년'                 _ 400년 중 100번
 	[2] 그 중 100으로 나눠 떨어지는 해는 '평년' 위에서   _ 100th년, 200th년, 300th년, 400th년 뺌 ->96
 	[3] 다만 400으로 나눠떨어지는 해는 다시 '윤년'       _ 위에 400th년은 윤년으로 추가 -> 총 97번
 	==> 이로써 1년의 평균길이를 365.2425일로 정하여 역에 썼으므로 실제의 1년보다 0.0003일이 길다.
 
 
 */